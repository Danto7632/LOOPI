name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build project
      run: |
        cd frontend
        npm run build
      env:
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

    # Vercel 배포 (Vercel CLI 사용)
    - name: Deploy to Vercel
      run: |
        cd frontend
        if [ -n "${{ secrets.VERCEL_TOKEN }}" ]; then
          npx vercel --prod --confirm
        else
          echo "VERCEL_TOKEN not set. Skipping Vercel deployment."
          echo "Please set VERCEL_TOKEN in GitHub repository secrets."
        fi
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  deploy-backend:
    name: Deploy Backend to Railway
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      run: |
        cd backend
        npm ci

    - name: Build project
      run: |
        cd backend
        npm run build

    # Railway 배포 (추천)
    - name: Deploy to Railway
      run: |
        npm install -g @railway/cli
        cd backend
        if [ -n "${{ secrets.RAILWAY_TOKEN }}" ]; then
          railway login --token $RAILWAY_TOKEN
          railway deploy
          echo "✅ Railway 배포 완료!"
        else
          echo "⚠️ RAILWAY_TOKEN not set."
          echo "Railway 수동 배포 가이드: https://railway.app"
        fi
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    # 또는 Vercel 배포 (대안)
    - name: Deploy Backend to Vercel (Alternative)
      if: secrets.VERCEL_TOKEN && !secrets.RAILWAY_TOKEN
      run: |
        cd backend
        npm run build
        npx vercel --prod --confirm
        echo "✅ Vercel 배포 완료!"
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  # 배포 완료 알림
  notify-deployment:
    name: Notify Deployment Success
    needs: [deploy-frontend, deploy-backend]
    runs-on: ubuntu-latest
    
    steps:
    - name: Deployment Success
      run: |
        echo "🎉 배포가 성공적으로 완료되었습니다!"
        echo "프론트엔드: Vercel"
        echo "백엔드: Railway"