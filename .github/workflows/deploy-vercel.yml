name: Deploy to Vercel

on:
  push:
    branches: [ main ]
    paths: 
      - 'frontend/**'
      - '.github/workflows/deploy-vercel.yml'  # 이 워크플로우 수정시에도 실행
  pull_request:
    branches: [ main ]
    paths: 
      - 'frontend/**'
      - '.github/workflows/deploy-vercel.yml'
  workflow_dispatch:  # 수동 실행 가능

jobs:
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build project
      run: |
        cd frontend
        npm run build
      env:
        CI: false  # 경고를 에러로 처리하지 않음

    # Vercel CLI를 사용한 배포
    - name: Deploy to Vercel
      run: |
        cd frontend
        if [ -n "${{ secrets.VERCEL_TOKEN }}" ]; then
          npx vercel --prod --confirm --token "${{ secrets.VERCEL_TOKEN }}"
          echo "✅ Vercel 배포 완료!"
        else
          echo "⚠️ VERCEL_TOKEN이 설정되지 않았습니다."
          echo "🔧 수동 배포 방법:"
          echo "1. https://vercel.com 방문"
          echo "2. GitHub 계정으로 로그인"
          echo "3. 'Add New Project' 클릭"
          echo "4. LOOPI 리포지토리 선택"
          echo "5. Root Directory를 'frontend'로 설정"
          echo "6. Deploy 클릭"
          echo ""
          echo "📖 자세한 가이드: .github/VERCEL_DEPLOYMENT_GUIDE.md"
        fi
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    - name: Deployment Success
      run: |
        echo "🎉 Vercel 배포가 완료되었습니다!"
        echo "사이트 URL을 확인하세요."